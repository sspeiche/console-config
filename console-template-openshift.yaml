apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: openshift-console
  annotations:
    openshift.io/display-name: OpenShift Console
    description: The server for the OpenShift console.
    iconClass: icon-openshift
    tags: openshift,infra
    openshift.io/support-url: https://access.redhat.com
    openshift.io/provider-display-name: Red Hat, Inc.
parameters:
- name: VERSION
  value: latest
  required: true
- name: IMAGE
  value: quay.io/openshift/origin-console:${VERSION}
  required: true
- name: CONSOLE_HOSTNAME
  required: true
- name: TLS_CERT
- name: TLS_KEY
- name: TLS_CA_CERT
- name: NODE_SELECTOR
  value: "{}"
  required: true
- name: REPLICA_COUNT
  value: "2"
  required: true
- name: CLIENT_ID
  generate: expression
  from: "[a-z0-9]{5}"
- name: OAUTH_SECRET
  generate: expression
  from: "[a-zA-Z0-9]{32}"
objects:

# to create the web console server
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: console
    labels:
      app: openshift-console
      component: ui
  spec:
    selector:
      matchLabels:
        app: openshift-console
        component: ui
    strategy:
      type: RollingUpdate
    progressDeadlineSeconds: 600
    replicas: "${{REPLICA_COUNT}}"
    template:
      metadata:
        labels:
          app: openshift-console
          component: ui
        name: console
      spec:
        selector:
          matchLabels:
            app: openshift-console
            component: ui
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: openshift-console
                topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - /opt/bridge/bin/bridge
          - "--public-dir=/opt/bridge/static"
          - '--service-ca-file=/var/service-ca/service-ca.crt'
          image: quay.io/openshift/origin-console:${VERSION}
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
          livenessProbe:
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
          name: console
          ports:
          - containerPort: 8443
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/serving-cert
            name: serving-cert
            readOnly: true
          - mountPath: /var/service-ca
            name: service-ca
            readOnly: true
          - mountPath: /var/oauth-config
            name: oauth-config
            readOnly: true
          env:
          - name: BRIDGE_LISTEN
            value: https://0.0.0.0:8443
          - name: BRIDGE_BASE_ADDRESS
            value: https://${CONSOLE_HOSTNAME}/
          - name: BRIDGE_TLS_CERT_FILE
            value: /var/serving-cert/tls.crt
          - name: BRIDGE_TLS_KEY_FILE
            value: /var/serving-cert/tls.key
          - name: BRIDGE_K8S_AUTH
            value: openshift
          - name: BRIDGE_USER_AUTH
            value: openshift
          - name: BRIDGE_USER_AUTH
            value: openshift
          - name: BRIDGE_USER_AUTH_OIDC_CLIENT_ID
            value: console-${CLIENT_ID}
          - name: BRIDGE_USER_AUTH_OIDC_CLIENT_SECRET_FILE
            value: /var/oauth-config/clientSecret
          - name: BRIDGE_USER_AUTH_OIDC_CA_FILE
            value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - name: serving-cert
          secret:
            defaultMode: 0440
            secretName: console-serving-cert
        - name: service-ca
          configMap:
            name: service-ca
            defaultMode: 0440
        - name: oauth-config
          secret:
            defaultMode: 0440
            secretName: console-oauth-config
        nodeSelector: "${{NODE_SELECTOR}}"

# to store the OAauth client ID and secret
- apiVersion: v1
  kind: Secret
  metadata:
    name: console-oauth-config
    labels:
      app: openshift-console
  stringData:
    clientSecret: ${OAUTH_SECRET}

# to be able to assign powers to the process
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: console
    labels:
      app: openshift-console

# to be able to expose cluster console inside the cluster
- apiVersion: v1
  kind: Service
  metadata:
    name: console
    labels:
      app: openshift-console
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: console-serving-cert
  spec:
    selector:
      app: openshift-console
      component: ui
    ports:
    - name: https
      port: 443
      targetPort: 8443

# to be able to proxy to other services like prometheus
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: service-ca
    labels:
      app: console
    annotations:
      service.alpha.openshift.io/inject-cabundle: 'true'

# to be able to expose cluster console outside the cluster
- apiVersion: v1
  kind: Route
  metadata:
    name: console
    labels:
      app: openshift-console
  spec:
    host: ${CONSOLE_HOSTNAME}
    to:
      kind: Service
      name: console
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
      certificate: ${TLS_CERT}
      key: ${TLS_KEY}
      caCertificate: ${TLS_CA_CERT}

# to let users log in
- apiVersion: oauth.openshift.io/v1
  kind: OAuthClient
  metadata:
    name: console-${CLIENT_ID}
  grantMethod: auto
  secret: ${OAUTH_SECRET}
  redirectURIs:
  - https://${CONSOLE_HOSTNAME}/
